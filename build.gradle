plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.1"
    id("io.micronaut.test-resources") version "4.0.1"
    id("io.micronaut.aot") version "4.0.1"
}

version = "0.1"
group = "com.example"

repositories {
    maven {
        url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
        mavenContent { snapshotsOnly() }
    }
    mavenCentral()
}

dependencies {

    testImplementation('org.junit.jupiter:junit-jupiter:5.9.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.2')

    // Mockito
    testImplementation('org.mockito:mockito-core:5.2.0')
    testImplementation('org.mockito:mockito-junit-jupiter:5.2.0')

    // Micronaut
    implementation('io.micronaut:micronaut-inject:3.8.7')
    implementation("io.micronaut:micronaut-validation:3.8.7")
    implementation("io.micronaut:micronaut-runtime:3.8.7")
    implementation('io.micronaut:micronaut-http-client:3.8.7')

    // Micronaut Test
    testImplementation("io.micronaut.test:micronaut-test-junit5:3.2.3")
    testImplementation("io.micronaut.test:micronaut-test-spock:3.2.3")

    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    compileOnly("org.projectlombok:lombok")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("mysql:mysql-connector-java")
    testImplementation("io.micronaut:micronaut-http-client")
    developmentOnly("io.micronaut.controlpanel:micronaut-control-panel-ui")
}

test {
    useJUnitPlatform()
}

application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}



